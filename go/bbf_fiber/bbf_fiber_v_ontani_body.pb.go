// Code generated by protoc-gen-go. DO NOT EDIT.
// source: voltha_protos/bbf_fiber_v_ontani_body.proto

package bbf_fiber

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VOntaniConfigData struct {
	ParentRef              string   `protobuf:"bytes,1,opt,name=parent_ref,json=parentRef,proto3" json:"parent_ref,omitempty"`
	ExpectedSerialNumber   string   `protobuf:"bytes,2,opt,name=expected_serial_number,json=expectedSerialNumber,proto3" json:"expected_serial_number,omitempty"`
	ExpectedRegistrationId string   `protobuf:"bytes,3,opt,name=expected_registration_id,json=expectedRegistrationId,proto3" json:"expected_registration_id,omitempty"`
	PreferredChanpair      string   `protobuf:"bytes,4,opt,name=preferred_chanpair,json=preferredChanpair,proto3" json:"preferred_chanpair,omitempty"`
	ProtectionChanpair     string   `protobuf:"bytes,5,opt,name=protection_chanpair,json=protectionChanpair,proto3" json:"protection_chanpair,omitempty"`
	UpstreamChannelSpeed   uint32   `protobuf:"varint,6,opt,name=upstream_channel_speed,json=upstreamChannelSpeed,proto3" json:"upstream_channel_speed,omitempty"`
	OnuId                  uint32   `protobuf:"varint,7,opt,name=onu_id,json=onuId,proto3" json:"onu_id,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *VOntaniConfigData) Reset()         { *m = VOntaniConfigData{} }
func (m *VOntaniConfigData) String() string { return proto.CompactTextString(m) }
func (*VOntaniConfigData) ProtoMessage()    {}
func (*VOntaniConfigData) Descriptor() ([]byte, []int) {
	return fileDescriptor_166371fff1eb9424, []int{0}
}

func (m *VOntaniConfigData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VOntaniConfigData.Unmarshal(m, b)
}
func (m *VOntaniConfigData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VOntaniConfigData.Marshal(b, m, deterministic)
}
func (m *VOntaniConfigData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VOntaniConfigData.Merge(m, src)
}
func (m *VOntaniConfigData) XXX_Size() int {
	return xxx_messageInfo_VOntaniConfigData.Size(m)
}
func (m *VOntaniConfigData) XXX_DiscardUnknown() {
	xxx_messageInfo_VOntaniConfigData.DiscardUnknown(m)
}

var xxx_messageInfo_VOntaniConfigData proto.InternalMessageInfo

func (m *VOntaniConfigData) GetParentRef() string {
	if m != nil {
		return m.ParentRef
	}
	return ""
}

func (m *VOntaniConfigData) GetExpectedSerialNumber() string {
	if m != nil {
		return m.ExpectedSerialNumber
	}
	return ""
}

func (m *VOntaniConfigData) GetExpectedRegistrationId() string {
	if m != nil {
		return m.ExpectedRegistrationId
	}
	return ""
}

func (m *VOntaniConfigData) GetPreferredChanpair() string {
	if m != nil {
		return m.PreferredChanpair
	}
	return ""
}

func (m *VOntaniConfigData) GetProtectionChanpair() string {
	if m != nil {
		return m.ProtectionChanpair
	}
	return ""
}

func (m *VOntaniConfigData) GetUpstreamChannelSpeed() uint32 {
	if m != nil {
		return m.UpstreamChannelSpeed
	}
	return 0
}

func (m *VOntaniConfigData) GetOnuId() uint32 {
	if m != nil {
		return m.OnuId
	}
	return 0
}

func init() {
	proto.RegisterType((*VOntaniConfigData)(nil), "bbf_fiber.VOntaniConfigData")
}

func init() {
	proto.RegisterFile("voltha_protos/bbf_fiber_v_ontani_body.proto", fileDescriptor_166371fff1eb9424)
}

var fileDescriptor_166371fff1eb9424 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xd1, 0x41, 0x6b, 0x32, 0x31,
	0x10, 0x06, 0x60, 0xf4, 0xfb, 0xb4, 0x18, 0xe8, 0xc1, 0xd4, 0xca, 0x5e, 0x0a, 0xd2, 0x93, 0x50,
	0x74, 0x0f, 0x95, 0xd2, 0x73, 0xed, 0xc5, 0x4b, 0x0b, 0x2b, 0xf4, 0xd0, 0x4b, 0x48, 0x36, 0xb3,
	0x6b, 0x40, 0x27, 0x61, 0x36, 0x2b, 0xed, 0xaf, 0xec, 0x5f, 0x2a, 0x8e, 0x1a, 0x7b, 0x9d, 0xe7,
	0x7d, 0x87, 0x84, 0x11, 0x0f, 0x7b, 0xbf, 0x8d, 0x1b, 0xad, 0x02, 0xf9, 0xe8, 0x9b, 0xdc, 0x98,
	0x4a, 0x55, 0xce, 0x00, 0xa9, 0xbd, 0xf2, 0x18, 0x35, 0x3a, 0x65, 0xbc, 0xfd, 0x9e, 0x33, 0xcb,
	0x41, 0xe2, 0xfb, 0x9f, 0xae, 0x18, 0x7e, 0xbc, 0x73, 0x62, 0xe9, 0xb1, 0x72, 0xf5, 0xab, 0x8e,
	0x5a, 0xde, 0x09, 0x11, 0x34, 0x01, 0x46, 0x45, 0x50, 0x65, 0x9d, 0x49, 0x67, 0x3a, 0x28, 0x06,
	0xc7, 0x49, 0x01, 0x95, 0x5c, 0x88, 0x31, 0x7c, 0x05, 0x28, 0x23, 0x58, 0xd5, 0x00, 0x39, 0xbd,
	0x55, 0xd8, 0xee, 0x0c, 0x50, 0xd6, 0xe5, 0xe8, 0xe8, 0xac, 0x6b, 0xc6, 0x37, 0x36, 0xf9, 0x2c,
	0xb2, 0xd4, 0x22, 0xa8, 0x5d, 0x13, 0x49, 0x47, 0xe7, 0x51, 0x39, 0x9b, 0xfd, 0xe3, 0x5e, 0xda,
	0x5a, 0xfc, 0xe1, 0x95, 0x95, 0x33, 0x21, 0x03, 0x41, 0x05, 0x44, 0x60, 0x55, 0xb9, 0xd1, 0x18,
	0xb4, 0xa3, 0xec, 0x3f, 0x77, 0x86, 0x49, 0x96, 0x27, 0x90, 0xb9, 0xb8, 0x39, 0xfc, 0x13, 0x4a,
	0xde, 0x9e, 0xf2, 0x3d, 0xce, 0xcb, 0x0b, 0xa5, 0xc2, 0x42, 0x8c, 0xdb, 0xd0, 0x44, 0x02, 0xbd,
	0xe3, 0x38, 0xc2, 0x56, 0x35, 0x01, 0xc0, 0x66, 0xfd, 0x49, 0x67, 0x7a, 0x5d, 0x8c, 0xce, 0xba,
	0x3c, 0xe2, 0xfa, 0x60, 0xf2, 0x56, 0xf4, 0x3d, 0xb6, 0x87, 0xd7, 0x5f, 0x71, 0xaa, 0xe7, 0xb1,
	0x5d, 0xd9, 0x97, 0xa7, 0xcf, 0x45, 0xed, 0xe2, 0xa6, 0x35, 0xf3, 0xd2, 0xef, 0x72, 0x6b, 0xb4,
	0x43, 0x43, 0x6e, 0x56, 0x3a, 0x40, 0x9d, 0x1f, 0xaf, 0x34, 0x3b, 0x5d, 0xa9, 0xf6, 0x97, 0x43,
	0x99, 0x3e, 0x0f, 0x1f, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x71, 0xa9, 0x95, 0xbe, 0xca, 0x01,
	0x00, 0x00,
}
